theme_light(base_size = 18) +
labs(title= "Attendance and Enrollment by month", x="Attendance Month", y="Number of Students", fill = "Legend")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "First Semester Attendance Rates 19/20 vs 20/21"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("attendance_rate_percent", "student_add", "student_drop", "used"), selected = "attendance_rate_percent"),
plotOutput("plot", width = "500px", height = "400px")))
dashboardBody(
selectInput("x", "Select Filter", choices=c("month", "code"), selected="code"),
plotOutput("plot", width = "500px", height = "400px"))
server <- function(input, output, session) {
output$plot <- renderPlot({
attrates %>%
ggplot(aes_string(x = "month", y = input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "Attendance and Enrollment by month", x="Attendance Month", y="Number of Students", fill = "Legend")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
```{r, eval=FALSE, echo=TRUE}
ui <- dashboardPage(
dashboardHeader(title = "GPA Stuff"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Parameter", choices = c("1", "2", "3", "4", "5", "code"),
selected = "1"),
selectInput("y", "Select Factor", choices = c("student_attedance_percent", "student_add","student_drop", "use"),
selected = "student_attendance_percent"),
), # close the first box
box(title = "GPA Stuff", width=7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
attjoined <- renderPlot({
term_gpa_even_longer %>%
filter(x==input$x & y==input$y) %>%
ggplot(aes(x=gpa, fill=year)) +
geom_histogram()+
facet_wrap(~year)+
#geom_col(color="black", fill="slateblue2", alpha=1)+
theme_gdocs()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#labs(x = "Ethnicity", y = "Number in Category")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "GPA Stuff"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Parameter", choices = c("1", "2", "3", "4", "5", "code"),
selected = "1"),
selectInput("y", "Select Factor", choices = c("student_attedance_percent", "student_add","student_drop", "use"),
selected = "student_attendance_percent"),
), # close the first box
box(title = "GPA Stuff", width=7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
attjoined <- renderPlot({
term_gpa_even_longer %>%
filter(x==input$x & y==input$y) %>%
ggplot(aes(x=gpa, fill=year)) +
geom_histogram()+
facet_wrap(~year)+
#geom_col(color="black", fill="slateblue2", alpha=1)+
theme_gdocs()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#labs(x = "Data for Choice", y = "Number in Category")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "GPA Stuff"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Parameter", choices = c("1", "2", "3", "4", "5", "code"),
selected = "1"),
selectInput("y", "Select Factor", choices = c("student_attedance_percent", "student_add","student_drop", "use"),
selected = "student_attendance_percent"),
), # close the first box
box(title = "GPA Stuff", width=7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
attjoined <- renderPlot({
term_gpa_even_longer %>%
filter(x==input$x & y==input$y) %>%
ggplot(aes(x=month, fill=students)) +
geom_histogram()+
facet_wrap(~year)+
#geom_col(color="black", fill="slateblue2", alpha=1)+
theme_gdocs()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#labs(x = "Data for Choice", y = "Number in Category")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "GPA Stuff"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Parameter", choices = c("1", "2", "3", "4", "5", "code"),
selected = "1"),
selectInput("y", "Select Factor", choices = c("student_attedance_percent", "student_add","student_drop", "use"),
selected = "student_attendance_percent"),
), # close the first box
box(title = "GPA Stuff", width=7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
attjoined <- renderPlot({
term_gpa_even_longer %>%
filter(x==input$x & y==input$y) %>%
ggplot(aes(x=month, fill=students)) +
geom_histogram()+
facet_wrap(~year)+
#geom_col(color="black", fill="slateblue2", alpha=1)+
theme_gdocs()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#labs(x = "Data for Choice", y = "Number in Category")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "GPA Stuff"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Parameter", choices = c("1", "2", "3", "4", "5", "code"),
selected = "1"),
selectInput("y", "Select Factor", choices = c("student_attedance_percent", "student_add","student_drop", "used"),
selected = "student_attendance_percent"),
), # close the first box
box(title = "GPA Stuff", width=7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
attjoined <- renderPlot({
term_gpa_even_longer %>%
filter(x==input$x & y==input$y) %>%
ggplot(aes(x=month, fill=students)) +
geom_histogram()+
facet_wrap(~year)+
#geom_col(color="black", fill="slateblue2", alpha=1)+
theme_gdocs()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#labs(x = "Data for Choice", y = "Number in Category")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
attjoined<- merge(attrates, codesmonth,by=c("month", "year"))
attjoined$code <- as.numeric(attjoined$code)
attjoined<- merge(attrates, codesmonth,by=c("month", "year"))
attjoined$year <- as.numeric(attjoined$year)
attjoined<- merge(attrates, codesmonth,by=c("month", "year"))
attjoined$year <- as.numeric(attjoined$year)
attjoined
ui <- dashboardPage(
dashboardHeader(title = "GPA Stuff"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Parameter", choices = c("1", "2", "3", "4", "5", "code"),
selected = "1"),
selectInput("y", "Select Factor", choices = c("student_attedance_percent", "student_add","student_drop", "used"),
selected = "student_attendance_percent"),
), # close the first box
box(title = "GPA Stuff", width=7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
attjoined <- renderPlot({
term_gpa_even_longer %>%
filter(x==input$x & y==input$y) %>%
ggplot(aes(x=month, fill=students)) +
geom_histogram()+
facet_wrap(~year)+
#geom_col(color="black", fill="slateblue2", alpha=1)+
theme_gdocs()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#labs(x = "Data for Choice", y = "Number in Category")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "GPA Stuff"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Parameter", choices = c("1", "2", "3", "4", "5", "code"),
selected = "1"),
selectInput("y", "Select Factor", choices = c("student_attedance_percent", "student_add","student_drop", "used"),
selected = "student_attendance_percent"),
), # close the first box
box(title = "GPA Stuff", width=7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
attjoined <- renderPlot({
term_gpa_even_longer %>%
filter(x==input$x & y==input$y) %>%
ggplot(aes(x=month, fill=input$y)) +
geom_histogram()+
facet_wrap(~year)+
#geom_col(color="black", fill="slateblue2", alpha=1)+
theme_gdocs()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#labs(x = "Data for Choice", y = "Number in Category")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "GPA Stuff"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Month", choices = c("1", "2", "3", "4", "5"),
selected = "1"),
selectInput("y", "Select Factor", choices = c("student_attedance_percent", "student_add","student_drop", "used"),
selected = "student_attendance_percent"),
), # close the first box
box(title = "GPA Stuff", width=7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
attjoined <- renderPlot({
term_gpa_even_longer %>%
filter(x==input$x & y==input$y) %>%
ggplot(aes(x=month, fill=code)) +
geom_histogram()+
facet_wrap(~year)+
#geom_col(color="black", fill="slateblue2", alpha=1)+
theme_gdocs()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#labs(x = "Data for Choice", y = "Number in Category")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "GPA Stuff"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Month", choices = c("1", "2", "3", "4", "5"),
selected = "1"),
selectInput("y", "Select Factor", choices = c("student_attedance_percent", "student_add","student_drop", "used"),
selected = "student_attendance_percent"),
), # close the first box
box(title = "GPA Stuff", width=7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
attjoined <- renderPlot({
term_gpa_even_longer %>%
filter(month==input$x & number_of_students==input$y) %>%
ggplot(aes(x=month, fill=code)) +
geom_histogram()+
facet_wrap(~year)+
#geom_col(color="black", fill="slateblue2", alpha=1)+
theme_gdocs()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#labs(x = "Data for Choice", y = "Number in Category")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "First Semester Attendance Rates 19/20 vs 20/21"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("attendance_rate_percent", "student_add", "student_drop", "used"), selected = "attendance_rate_percent"),
plotOutput("plot", width = "500px", height = "400px")))
dashboardBody(
selectInput("x", "Select Filter", choices=c("month", "code"), selected="code"),
plotOutput("plot", width = "500px", height = "400px"))
server <- function(input, output, session) {
output$plot <- renderPlot({
attrates %>%
ggplot(aes_string(x = "month", y = input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "Attendance and Enrollment by month", x="Attendance Month", y="Number of Students", fill = "Legend")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "First Semester Attendance Rates 19/20 vs 20/21"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("attendance_rate_percent", "student_add", "student_drop", "used"), selected = "attendance_rate_percent"),
plotOutput("plot", width = "500px", height = "400px")))
dashboardBody(
selectInput("x", "Select Filter", choices=c("month", "code"), selected="code"),
plotOutput("plot", width = "500px", height = "400px"))
server <- function(input, output, session) {
output$plot <- renderPlot({
attjoined %>%
ggplot(aes_string(x = "month", y = input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "Attendance and Enrollment by month", x="Attendance Month", y="Number of Students", fill = "Legend")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "First Semester Attendance Rates 19/20 vs 20/21"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("attendance_rate_percent", "student_add", "student_drop", "used"), selected = "attendance_rate_percent"),
plotOutput("plot", width = "500px", height = "400px")))
dashboardBody(
selectInput("x", "Select Filter", choices=c("month", "code"), selected="code"),
plotOutput("plot", width = "500px", height = "400px"))
server <- function(input, output, session) {
output$plot <- renderPlot({
attjoined %>%
ggplot(aes_string(x = "month", y = input$y, fill=input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "Attendance and Enrollment by month", x="Attendance Month", y="Number of Students", fill = "Legend")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "First Semester Attendance Rates 19/20 vs 20/21"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("attendance_rate_percent", "student_add", "student_drop", "used"), selected = "attendance_rate_percent"),
plotOutput("plot", width = "500px", height = "400px")))
dashboardBody(
selectInput("x", "Select Filter", choices=c("month", "code"), selected="code"),
plotOutput("plot", width = "500px", height = "400px"))
server <- function(input, output, session) {
output$plot <- renderPlot({
attjoined %>%
ggplot(aes_string(x = "month", y = input$y, fill=code)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "Attendance and Enrollment by month", x="Attendance Month", y="Number of Students", fill = "Legend")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "First Semester Attendance Rates 19/20 vs 20/21"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("attendance_rate_percent", "student_add", "student_drop", "used"), selected = "attendance_rate_percent"),
plotOutput("plot", width = "500px", height = "400px")))
dashboardBody(
selectInput("x", "Select Filter", choices=c("month", "code"), selected="code"),
plotOutput("plot", width = "500px", height = "400px"))
server <- function(input, output, session) {
output$plot <- renderPlot({
attjoined %>%
ggplot(aes_string(x = "month", y = input$y, fill=input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "Attendance and Enrollment by month", x="Attendance Month", y="Number of Students", fill = "Legend")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "First Semester Attendance Rates 19/20 vs 20/21"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("attendance_rate_percent", "student_add", "student_drop", "used"), selected = "attendance_rate_percent"),
plotOutput("plot", width = "500px", height = "400px")))
dashboardBody(
selectInput("x", "Select Filter", choices=c("month", "code"), selected="code"),
plotOutput("plot", width = "500px", height = "400px"))
server <- function(input, output, session) {
output$plot <- renderPlot({
attjoined %>%
ggplot(aes_string(x = "month", y = input$y, fill=input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "Attendance and Enrollment by month", x="Attendance Month", y="Number of Students", fill = "Legend")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
setwd("C:/Users/Jessica/Desktop/BIS15W2021_JRICO/group project")
attrates<- readr::read_csv("att_rates.csv")
setwd("C:/Users/Jessica/Desktop/BIS15W2021_JRICO/group project")
attrates<- readr::read_csv("att_rates.csv")
setwd("C:/Users/Jessica/Desktop")
setwd("C:/Users/Jessica/Desktop/BIS15W2021_JRICO/group project")
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/Jessica/Desktop/BIS15W2021_JRICO/group project")
if (!require("tidyverse")) install.packages('tidyverse')
library(tidyverse)
library(rmarkdown)
library(shiny)
library(shinydashboard)
library(skimr)
library(janitor)
library(here)
library(RColorBrewer)
library(paletteer)
library(ggthemes)
library(naniar)
library(dplyr)
library(ggpubr)
options(scipen=999)
attrates<- readr::read_csv("att_rates.csv")
attrates<- readr::read_csv("att_rates.csv")
attrates<- readr::read_csv("att_rates.csv")
attrates<- readr::read_csv("att_rates.csv")
attrates<- readr::read_csv("att_rates.csv")
attrates<- readr::read_csv("att_rates.csv")
attrates<- readr::read_csv("att_rates.csv")
attrates<- readr::read_csv("att_rates.csv")
attrates<- readr::read_csv("att_rates.csv")
attrates<- readr::read_csv("att_rates.csv")
attrates<- readr::read_csv("att_rates.csv")
attrates<- readr::read_csv("att_rates.csv")
attrates<- readr::read_csv("att_rates.csv")
attrates<- readr::read_csv("att_rates.csv")
attrates<- readr::read_csv("att_rates.csv")
attrates<- readr::read_csv("att_rates.csv")
attrates<- readr::read_csv("att_rates.csv")
attrates<- readr::read_csv("att_rates.csv")
attrates<- readr::read_csv("att_rates.csv")
attrates<- readr::read_csv("att_rates.csv")
attrates<- readr::read_csv("att_rates.csv")
attrates<- readr::read_csv("att_rates.csv")
attrates<- readr::read_csv("att_rates.csv")
setwd("C:/Users/Jessica/Desktop/BIS15W2021_JRICO/BIS15W2021_JRICO/group project")
attrates<- readr::read_csv("att_rates.csv")
attrates<- readr::read_csv("att_rates.csv")
attrates<- readr::read_csv("att_rates.csv")
gpa<- readr::read_csv("term_gpas.csv")
gpa%>%
skimr::skim()
