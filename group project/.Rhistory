gpa<- janitor::clean_names(gpa)
gpa
gpa%>%
skimr::skim()
gpa %>%
summarise_all(~(sum(is.na(.))))
gpa2<- gpa%>%
na.omit(gpa)
gpa2 %>%
summarise_all(~(sum(is.na(.))))
gpa2$year<- as.factor(gpa2$year)
gpa2
#This dataset shows the term 1 and term 2 grades for students by year. Term 1 represents progress grades and term 2 is the final semester grade. I removed the NA's that were present in the form of no values. These values coincided with students either withdrawing prior to receiving their posted grades or enrolling with less than 20 days between their enrollment and the grading period.
attreason <- readr::read_csv("att_reason_reports.csv")
attreason
attcodes<- attreason%>%
pivot_longer(-year, names_to = "att_code", values_to = "occurence")
attcodes$year<- as.factor(attcodes$year)
attcodes
#This dataset shows the usage of attendance codes by year. These attendance codes are used when we enter the reason behind an absence. Some, such as DR, ILL, are excused while others like UNV, and VUN are not excused. These factor in when it comes to determining our attendance percentages. The codes ILL19, AVP, NWFA, DAC, and NCA are codes introduced due to the pandemic.
virtualed <- merge(attrates, attcodes,by="year")
virtualed
attjoined<- merge(attrates, codesmonth,by="year")
attjoined
attjoined<- merge(attrates, codesmonth,by="month")
attjoined
View(attjoined)
attjoined<- merge(attrates, codesmonth,by="month", "year")
attjoined
attjoined<- merge(attrates, codesmonth,by=c("month", "year"))
attjoined
View(attjoined)
```{r}
ui <- dashboardPage(
dashboardHeader(title = "First Semester Attendance Rates 19/20 vs 20/21"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("attendance_rate_percent", "student_add", "student_drop", "used"), selected = "attendance_rate_percent"),
plotOutput("plot", width = "500px", height = "400px")))
dashboardBody(
selectInput("x", "Select Filter", choices=c("month", "code"), selected="code"),
plotOutput("plot", width = "500px", height = "400px"))
server <- function(input, output, session) {
output$plot <- renderPlot({
attrates %>%
ggplot(aes_string(x = "month", y = "attendance_rate_percent", fill=input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "Attendance and Enrollment by month", x="Attendance Month", y="Number of Students", fill = "Legend")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "First Semester Attendance Rates 19/20 vs 20/21"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("attendance_rate_percent", "student_add", "student_drop", "used"), selected = "attendance_rate_percent"),
plotOutput("plot", width = "500px", height = "400px")))
dashboardBody(
selectInput("x", "Select Filter", choices=c("month", "code"), selected="code"),
plotOutput("plot", width = "500px", height = "400px"))
server <- function(input, output, session) {
output$plot <- renderPlot({
attrates %>%
ggplot(aes_string(x = "month", y = input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "Attendance and Enrollment by month", x="Attendance Month", y="Number of Students", fill = "Legend")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
```{r, eval=FALSE, echo=TRUE}
ui <- dashboardPage(
dashboardHeader(title = "GPA Stuff"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Parameter", choices = c("1", "2", "3", "4", "5", "code"),
selected = "1"),
selectInput("y", "Select Factor", choices = c("student_attedance_percent", "student_add","student_drop", "use"),
selected = "student_attendance_percent"),
), # close the first box
box(title = "GPA Stuff", width=7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
attjoined <- renderPlot({
term_gpa_even_longer %>%
filter(x==input$x & y==input$y) %>%
ggplot(aes(x=gpa, fill=year)) +
geom_histogram()+
facet_wrap(~year)+
#geom_col(color="black", fill="slateblue2", alpha=1)+
theme_gdocs()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#labs(x = "Ethnicity", y = "Number in Category")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "GPA Stuff"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Parameter", choices = c("1", "2", "3", "4", "5", "code"),
selected = "1"),
selectInput("y", "Select Factor", choices = c("student_attedance_percent", "student_add","student_drop", "use"),
selected = "student_attendance_percent"),
), # close the first box
box(title = "GPA Stuff", width=7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
attjoined <- renderPlot({
term_gpa_even_longer %>%
filter(x==input$x & y==input$y) %>%
ggplot(aes(x=gpa, fill=year)) +
geom_histogram()+
facet_wrap(~year)+
#geom_col(color="black", fill="slateblue2", alpha=1)+
theme_gdocs()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#labs(x = "Data for Choice", y = "Number in Category")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "GPA Stuff"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Parameter", choices = c("1", "2", "3", "4", "5", "code"),
selected = "1"),
selectInput("y", "Select Factor", choices = c("student_attedance_percent", "student_add","student_drop", "use"),
selected = "student_attendance_percent"),
), # close the first box
box(title = "GPA Stuff", width=7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
attjoined <- renderPlot({
term_gpa_even_longer %>%
filter(x==input$x & y==input$y) %>%
ggplot(aes(x=month, fill=students)) +
geom_histogram()+
facet_wrap(~year)+
#geom_col(color="black", fill="slateblue2", alpha=1)+
theme_gdocs()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#labs(x = "Data for Choice", y = "Number in Category")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "GPA Stuff"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Parameter", choices = c("1", "2", "3", "4", "5", "code"),
selected = "1"),
selectInput("y", "Select Factor", choices = c("student_attedance_percent", "student_add","student_drop", "use"),
selected = "student_attendance_percent"),
), # close the first box
box(title = "GPA Stuff", width=7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
attjoined <- renderPlot({
term_gpa_even_longer %>%
filter(x==input$x & y==input$y) %>%
ggplot(aes(x=month, fill=students)) +
geom_histogram()+
facet_wrap(~year)+
#geom_col(color="black", fill="slateblue2", alpha=1)+
theme_gdocs()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#labs(x = "Data for Choice", y = "Number in Category")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "GPA Stuff"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Parameter", choices = c("1", "2", "3", "4", "5", "code"),
selected = "1"),
selectInput("y", "Select Factor", choices = c("student_attedance_percent", "student_add","student_drop", "used"),
selected = "student_attendance_percent"),
), # close the first box
box(title = "GPA Stuff", width=7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
attjoined <- renderPlot({
term_gpa_even_longer %>%
filter(x==input$x & y==input$y) %>%
ggplot(aes(x=month, fill=students)) +
geom_histogram()+
facet_wrap(~year)+
#geom_col(color="black", fill="slateblue2", alpha=1)+
theme_gdocs()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#labs(x = "Data for Choice", y = "Number in Category")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
attjoined<- merge(attrates, codesmonth,by=c("month", "year"))
attjoined$code <- as.numeric(attjoined$code)
attjoined<- merge(attrates, codesmonth,by=c("month", "year"))
attjoined$year <- as.numeric(attjoined$year)
attjoined<- merge(attrates, codesmonth,by=c("month", "year"))
attjoined$year <- as.numeric(attjoined$year)
attjoined
ui <- dashboardPage(
dashboardHeader(title = "GPA Stuff"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Parameter", choices = c("1", "2", "3", "4", "5", "code"),
selected = "1"),
selectInput("y", "Select Factor", choices = c("student_attedance_percent", "student_add","student_drop", "used"),
selected = "student_attendance_percent"),
), # close the first box
box(title = "GPA Stuff", width=7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
attjoined <- renderPlot({
term_gpa_even_longer %>%
filter(x==input$x & y==input$y) %>%
ggplot(aes(x=month, fill=students)) +
geom_histogram()+
facet_wrap(~year)+
#geom_col(color="black", fill="slateblue2", alpha=1)+
theme_gdocs()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#labs(x = "Data for Choice", y = "Number in Category")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "GPA Stuff"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Parameter", choices = c("1", "2", "3", "4", "5", "code"),
selected = "1"),
selectInput("y", "Select Factor", choices = c("student_attedance_percent", "student_add","student_drop", "used"),
selected = "student_attendance_percent"),
), # close the first box
box(title = "GPA Stuff", width=7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
attjoined <- renderPlot({
term_gpa_even_longer %>%
filter(x==input$x & y==input$y) %>%
ggplot(aes(x=month, fill=input$y)) +
geom_histogram()+
facet_wrap(~year)+
#geom_col(color="black", fill="slateblue2", alpha=1)+
theme_gdocs()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#labs(x = "Data for Choice", y = "Number in Category")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "GPA Stuff"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Month", choices = c("1", "2", "3", "4", "5"),
selected = "1"),
selectInput("y", "Select Factor", choices = c("student_attedance_percent", "student_add","student_drop", "used"),
selected = "student_attendance_percent"),
), # close the first box
box(title = "GPA Stuff", width=7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
attjoined <- renderPlot({
term_gpa_even_longer %>%
filter(x==input$x & y==input$y) %>%
ggplot(aes(x=month, fill=code)) +
geom_histogram()+
facet_wrap(~year)+
#geom_col(color="black", fill="slateblue2", alpha=1)+
theme_gdocs()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#labs(x = "Data for Choice", y = "Number in Category")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "GPA Stuff"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Month", choices = c("1", "2", "3", "4", "5"),
selected = "1"),
selectInput("y", "Select Factor", choices = c("student_attedance_percent", "student_add","student_drop", "used"),
selected = "student_attendance_percent"),
), # close the first box
box(title = "GPA Stuff", width=7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
attjoined <- renderPlot({
term_gpa_even_longer %>%
filter(month==input$x & number_of_students==input$y) %>%
ggplot(aes(x=month, fill=code)) +
geom_histogram()+
facet_wrap(~year)+
#geom_col(color="black", fill="slateblue2", alpha=1)+
theme_gdocs()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#labs(x = "Data for Choice", y = "Number in Category")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "First Semester Attendance Rates 19/20 vs 20/21"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("attendance_rate_percent", "student_add", "student_drop", "used"), selected = "attendance_rate_percent"),
plotOutput("plot", width = "500px", height = "400px")))
dashboardBody(
selectInput("x", "Select Filter", choices=c("month", "code"), selected="code"),
plotOutput("plot", width = "500px", height = "400px"))
server <- function(input, output, session) {
output$plot <- renderPlot({
attrates %>%
ggplot(aes_string(x = "month", y = input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "Attendance and Enrollment by month", x="Attendance Month", y="Number of Students", fill = "Legend")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "First Semester Attendance Rates 19/20 vs 20/21"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("attendance_rate_percent", "student_add", "student_drop", "used"), selected = "attendance_rate_percent"),
plotOutput("plot", width = "500px", height = "400px")))
dashboardBody(
selectInput("x", "Select Filter", choices=c("month", "code"), selected="code"),
plotOutput("plot", width = "500px", height = "400px"))
server <- function(input, output, session) {
output$plot <- renderPlot({
attjoined %>%
ggplot(aes_string(x = "month", y = input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "Attendance and Enrollment by month", x="Attendance Month", y="Number of Students", fill = "Legend")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "First Semester Attendance Rates 19/20 vs 20/21"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("attendance_rate_percent", "student_add", "student_drop", "used"), selected = "attendance_rate_percent"),
plotOutput("plot", width = "500px", height = "400px")))
dashboardBody(
selectInput("x", "Select Filter", choices=c("month", "code"), selected="code"),
plotOutput("plot", width = "500px", height = "400px"))
server <- function(input, output, session) {
output$plot <- renderPlot({
attjoined %>%
ggplot(aes_string(x = "month", y = input$y, fill=input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "Attendance and Enrollment by month", x="Attendance Month", y="Number of Students", fill = "Legend")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "First Semester Attendance Rates 19/20 vs 20/21"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("attendance_rate_percent", "student_add", "student_drop", "used"), selected = "attendance_rate_percent"),
plotOutput("plot", width = "500px", height = "400px")))
dashboardBody(
selectInput("x", "Select Filter", choices=c("month", "code"), selected="code"),
plotOutput("plot", width = "500px", height = "400px"))
server <- function(input, output, session) {
output$plot <- renderPlot({
attjoined %>%
ggplot(aes_string(x = "month", y = input$y, fill=code)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "Attendance and Enrollment by month", x="Attendance Month", y="Number of Students", fill = "Legend")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "First Semester Attendance Rates 19/20 vs 20/21"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("attendance_rate_percent", "student_add", "student_drop", "used"), selected = "attendance_rate_percent"),
plotOutput("plot", width = "500px", height = "400px")))
dashboardBody(
selectInput("x", "Select Filter", choices=c("month", "code"), selected="code"),
plotOutput("plot", width = "500px", height = "400px"))
server <- function(input, output, session) {
output$plot <- renderPlot({
attjoined %>%
ggplot(aes_string(x = "month", y = input$y, fill=input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "Attendance and Enrollment by month", x="Attendance Month", y="Number of Students", fill = "Legend")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "First Semester Attendance Rates 19/20 vs 20/21"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("attendance_rate_percent", "student_add", "student_drop", "used"), selected = "attendance_rate_percent"),
plotOutput("plot", width = "500px", height = "400px")))
dashboardBody(
selectInput("x", "Select Filter", choices=c("month", "code"), selected="code"),
plotOutput("plot", width = "500px", height = "400px"))
server <- function(input, output, session) {
output$plot <- renderPlot({
attjoined %>%
ggplot(aes_string(x = "month", y = input$y, fill=input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "Attendance and Enrollment by month", x="Attendance Month", y="Number of Students", fill = "Legend")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
setwd("C:/Users/Jessica/Desktop/BIS15W2021_JRICO/group project")
attrates<- readr::read_csv("att_rates.csv")
setwd("C:/Users/Jessica/Desktop/BIS15W2021_JRICO/group project")
attrates<- readr::read_csv("att_rates.csv")
setwd("C:/Users/Jessica/Desktop")
setwd("C:/Users/Jessica/Desktop/BIS15W2021_JRICO/group project")
